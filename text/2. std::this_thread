Управление текущим потоком

Стандартная библиотека предоставляет несколько методов для управления текущим потоком. Все они находятся в пространстве имён std::this_thread:

# std::this_thread::yield() подсказывает планировщику потоков перепланировать выполнение,приостановив текущий поток и отдав преимущество другим потокам. Точное поведение этой функциизависит от реализации, в частности от механики используемого планировщика ОС и состояниясистемы. Например, планировщик реального времени first-in-first-out (SCHED_FIFO в Linux)приостанавливает текущий поток и помещает его в конец очереди потоков с одинаковымприоритетом, готовых к запуску (если нет других потоков с таким же приоритетом, yield неделает ничего).

# std::this_thread::get_id() работает аналогично std::thread::get_id().

# std::this_thread::sleep_for(sleep_duration) блокирует выполнение текущего потока на времяsleep_duration.

# std::this_thread::sleep_until(sleep_time) блокирует выполнение текущего потока до наступлениямомента времени sleep_time. 
